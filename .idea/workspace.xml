<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="dce5d9da-7f9e-4af8-b844-d2f8f80a48c7" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/infra/lib/infra-stack.ts" beforeDir="false" afterPath="$PROJECT_DIR$/backend/infra/lib/infra-stack.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/backend/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/backend/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/serverless.yml" beforeDir="false" afterPath="$PROJECT_DIR$/backend/serverless.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/serverless/dev.yml" beforeDir="false" afterPath="$PROJECT_DIR$/backend/serverless/dev.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/infra/lib/infra-stack.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/infra/lib/infra-stack.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/Components/InputForm.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/Components/InputForm.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/api/blueprint-api.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/api/blueprint-api.js" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2C2sO8i3QU1w7fTzK18ZRh34SWq" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "js.linters.configure.manually.selectedeslint": "true",
    "last_opened_file_path": "C:/Users/micha/Desktop/apps",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.selected.package.eslint": "C:\\Users\\micha\\Desktop\\blueprint-health-interview\\backend\\node_modules\\eslint",
    "node.js.selected.package.standard": "",
    "nodejs.jest.jest_package": "C:/Users/micha/Desktop/blueprint-health-interview/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "C:\\Users\\micha\\Desktop\\blueprint-health-interview\\node_modules\\prettier",
    "settings.editor.selected.configurable": "preferences.keymap",
    "ts.external.directory.path": "C:\\Users\\micha\\Desktop\\blueprint-health-interview\\frontend\\infra\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\micha\Desktop\blueprint-health-interview\src\blueprint\entities" />
      <recent name="C:\Users\micha\Desktop\blueprint-health-interview\src" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\micha\Desktop\blueprint-health-interview\backend" />
      <recent name="C:\Users\micha\Desktop\blueprint-health-interview\test\integration\helpers" />
      <recent name="C:\Users\micha\Desktop\blueprint-health-interview\test\unit" />
      <recent name="C:\Users\micha\Desktop\blueprint-health-interview\test\blueprint\services" />
      <recent name="C:\Users\micha\Desktop\blueprint-health-interview\test\blueprint\repositories" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.Blueprint.diagnostic-screener.Happy path.should respond with a diagnosticScreener">
    <configuration name="BlueprintController.diagnosticScreener.should call the blueprintService" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/blueprint/controllers/blueprint.controller.spec.ts" />
      <test-names>
        <test-name value="BlueprintController" />
        <test-name value="diagnosticScreener" />
        <test-name value="should call the blueprintService" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="BlueprintController.diagnosticScreener.should return a DiagnosticScreener" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/blueprint/controllers/blueprint.controller.spec.ts" />
      <test-names>
        <test-name value="BlueprintController" />
        <test-name value="diagnosticScreener" />
        <test-name value="should return a DiagnosticScreener" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="BlueprintService.getDiagnosticScreener.should map the result to a DiagnosticScreener" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/blueprint/services/blueprint.service.spec.ts" />
      <test-names>
        <test-name value="BlueprintService" />
        <test-name value="getDiagnosticScreener" />
        <test-name value="should map the result to a DiagnosticScreener" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Blueprint.diagnostic-screener.Happy path.should respond 200 when asked for a diagnosticScreener" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/integration/blueprint.integration.spec.ts" />
      <test-names>
        <test-name value="Blueprint" />
        <test-name value="diagnostic-screener" />
        <test-name value="Happy path" />
        <test-name value="should respond 200 when asked for a diagnosticScreener" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Blueprint.diagnostic-screener.Happy path.should respond with a diagnosticScreener" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/integration/blueprint.integration.spec.ts" />
      <test-names>
        <test-name value="Blueprint" />
        <test-name value="diagnostic-screener" />
        <test-name value="Happy path" />
        <test-name value="should respond with a diagnosticScreener" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.Blueprint.diagnostic-screener.Happy path.should respond with a diagnosticScreener" />
        <item itemvalue="Jest.Blueprint.diagnostic-screener.Happy path.should respond 200 when asked for a diagnosticScreener" />
        <item itemvalue="Jest.BlueprintController.diagnosticScreener.should return a DiagnosticScreener" />
        <item itemvalue="Jest.BlueprintController.diagnosticScreener.should call the blueprintService" />
        <item itemvalue="Jest.BlueprintService.getDiagnosticScreener.should map the result to a DiagnosticScreener" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="dce5d9da-7f9e-4af8-b844-d2f8f80a48c7" name="Changes" comment="" />
      <created>1658011978354</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1658011978354</updated>
      <workItem from="1658011980519" duration="2500000" />
      <workItem from="1658014734867" duration="371000" />
      <workItem from="1658015119287" duration="2583000" />
      <workItem from="1658072200952" duration="15782000" />
      <workItem from="1658181388131" duration="23917000" />
      <workItem from="1658266577921" duration="17211000" />
      <workItem from="1658316911252" duration="6756000" />
      <workItem from="1658348821009" duration="27936000" />
      <workItem from="1658417308445" duration="9800000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
    <option name="exactExcludedFiles">
      <list>
        <option value="$PROJECT_DIR$/frontend/infra/lib/infra-stack.d.ts" />
        <option value="$PROJECT_DIR$/frontend/infra/bin/infra.d.ts" />
        <option value="$PROJECT_DIR$/frontend/infra/lib/infra-stack.js" />
        <option value="$PROJECT_DIR$/frontend/infra/bin/infra.js" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>